<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.CommentDao">

	<resultMap id="commentAndPic" type="com.hotel.models.Comment">
		<id property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="sid" column="sid"/>
        <result property="time" column="time"/>
        <result property="score" column="score"/>
        <result property="state" column="state"/>
        <result property="isanonymous" column="isanonymous"/>
        <result property="content" column="content"/>
        <collection property="commentPics"  javaType="list" ofType="CommentPic">
            <id property="id" column="pid"/>
            <result property="cid" column="cid"/>
            <result property="priUrl" column="priUrl"/>
            <result property="state" column="pstate"/>
        </collection>
	</resultMap>

	<!-- 添加comments -->
	<insert id="addComment" parameterType="Comment">
		insert into comment(uid,sid,content,time,score,state,isanonymous)
		values(#{uid},#{sid},#{content},#{time},#{score},#{state},#{isanonymous})
	</insert>

	<select id="getAllCommentByHotelId" parameterType="java.lang.String"
		resultType="commentAndPic">
		select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from hotel
		left join service on hotel.id = service.hid
		left join comment on service.id = comment.sid
		left join comment_pic on comment.id = comment_pic.cid
		where hotel.id = #{hotelId}
	</select>

	<select id="getCommentByHotelIdAndScore" parameterType="map"
		resultType="commentAndPic">
		select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from hotel
		left join service on hotel.id = service.hid
		left join comment on service.id = comment.sid
		left join comment_pic on comment.id = comment_pic.cid
		where hotel.id = #{hotelId} and comment.score = #{score}
	</select>

	<select id="getCommentByHotelIdAndState" parameterType="map"
		resultType="commentAndPic">
		select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from hotel
		left join service on hotel.id = service.hid
		left join comment on service.id = comment.sid
		left join comment_pic on comment.id = comment_pic.cid
		where hotel.id = #{hotelId} and comment.state = #{state}
	</select>

	<select id="getCommentByUid" parameterType="java.lang.String"
		resultMap="commentAndPic">
		select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from comment left join comment_pic on comment.id = comment_pic.cid where comment.uid = #{uid}
	</select>

	<select id="getCommentBySid" parameterType="java.lang.Integer"
			resultMap="commentAndPic">
        select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from comment left join comment_pic on comment.id = comment_pic.cid where comment.sid = #{sid}
	</select>

    <select id="getCommentById" parameterType="java.lang.Integer" resultMap="commentAndPic">
        select comment.*,comment_pic.id as pid,comment_pic.cid,comment_pic.picUrl,comment_pic.state as pstate from comment left join comment_pic on comment.id = comment_pic.cid where comment.id = #{id}
    </select>

    <delete id="delteCommentById" parameterType="java.lang.Integer">
        delete from comment where id = #{id}
    </delete>
</mapper>